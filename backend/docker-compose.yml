services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: govconnect-database
    environment:
      POSTGRES_DB: govconnect
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - govconnect-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: govconnect-backend
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: database
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: govconnect
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRES_IN: 15m
      JWT_REFRESH_EXPIRES_IN: 7d
      BCRYPT_ROUNDS: 12
      RP_NAME: GovConnect
      RP_ID: localhost
      ORIGIN: http://localhost:3000
      # Storage
      STORAGE_DRIVER: minio
      MINIO_ENDPOINT: file-storage
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin123
      MINIO_USE_SSL: 'false'
      MINIO_BUCKET: uploads
      MINIO_PUBLIC_URL: http://localhost:9000
    ports:
      - "3000:3000"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - govconnect-network
    volumes:
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped


  # File Storage Service (MinIO S3-compatible)
  file-storage:
    image: minio/minio:latest
    container_name: govconnect-file-storage
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - govconnect-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Mail Development Server (MailHog)
  mail-dev:
    image: mailhog/mailhog:latest
    container_name: govconnect-mail-dev
    ports:
      - "1025:1025"  # SMTP port
      - "8025:8025"  # Web UI port
    networks:
      - govconnect-network
    restart: unless-stopped

  # Redis (for session management and caching)
  redis:
    image: redis:7-alpine
    container_name: govconnect-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - govconnect-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Admin Tools (pgAdmin for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: govconnect-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@govconnect.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - database
    networks:
      - govconnect-network
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stopped

networks:
  govconnect-network:
    driver: bridge

volumes:
  postgres_data:
  minio_data:
  redis_data:
  pgadmin_data:
